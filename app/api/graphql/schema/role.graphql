type Role {
	id: ID!
	code: String!
	name: String!
	isOrgAdmin: Boolean!
	isArchived: Boolean!
    organization: Organization
	createdAt: Time!
	permissions: [String!]!
}

type RolesResult {
	roles: [Role!]!
	total: Int!
}

input NewRole {
	name: String!
	isOrgAdmin: Boolean!
    organizationID: ID
	permissions: [String!]
}

input UpdateRole {
	name: NullString
	permissions: [String!]
	isArchived: NullBool
}

extend type Query {
	roles(search: SearchFilter!, limit: Int!, offset: Int!, organizationID: ID): RolesResult!
	role(id: ID, code: String): Role!
}

extend type Mutation {
	roleCreate(input: NewRole!): Role!
	roleUpdate(id: ID!, input: UpdateRole!): Role!
}